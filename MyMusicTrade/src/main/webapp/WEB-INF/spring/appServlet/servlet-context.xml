<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd"
		>

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources location="file:///C:/img" mapping="/images/**"></resources>
	<resources location="/static/js/" mapping="/js/**"></resources>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		
	</beans:bean>
	
	<context:component-scan base-package="com.mmt.MyMusicTrade">
	
	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	
	</context:component-scan>
	
	<tx:annotation-driven/>
	
	<task:annotation-driven scheduler="scheduler"/>
	<task:scheduler id="scheduler" pool-size="10"/>
	
	<beans:bean id="Counting" class="com.mmt.MyMusicTrade.component.Counting"></beans:bean>
	
	<task:scheduled-tasks>
		<task:scheduled ref="Counting" method="resetDailyCount" cron = "0 0 0 * * *"/>
		<task:scheduled ref="Counting" method="resetWeekCount" cron = "0 0 0 * * MON"/>
		<task:scheduled ref="Counting" method="resetMonthCount" cron = "0 0 0 1 * *"/>
	</task:scheduled-tasks>
	
	<interceptors>
		<interceptor>		
			<mapping path="/admin/**"/>
			<mapping path="/event/**"/>
			
			<exclude-mapping path="/page_info/page_info"/>
			<exclude-mapping path="/music_info/list"/>
			<exclude-mapping path="/event/list"/>
			 <!--제외시켜라  -->
			
			<beans:bean class="com.mmt.MyMusicTrade.interceptor.AdminInterceptor"></beans:bean>	<!-- 어떤걸 실행시킬지 -->
		</interceptor>
		
		<interceptor>		
			<mapping path="/partner/**"/>
			
			<beans:bean class="com.mmt.MyMusicTrade.interceptor.PartnerInterceptor"></beans:bean>	<!-- 어떤걸 실행시킬지 -->
		</interceptor>
		
		<interceptor>		
			<mapping path="/normal/**"/>
			
			<beans:bean class="com.mmt.MyMusicTrade.interceptor.NormalInterceptor"></beans:bean>	<!-- 어떤걸 실행시킬지 -->
		</interceptor>
	</interceptors>

</beans:beans>
